name: publisher

on:
  push:
    branches:
      - dev

jobs:
  publish_api:
    if: "!contains(github.event.head_commit.message, '[skip-api]')"
    name: "Publish @acrommunity/api"
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install, check and build the app
      - run: yarn workspace @acrommunity/common install
      - run: yarn workspace @acrommunity/common build
      - run: yarn workspace @acrommunity/api link:common
      - run: yarn workspace @acrommunity/api install
      - run: yarn workspace @acrommunity/api lint
      - run: yarn workspace @acrommunity/api build

      #      # Login to digital ocean docker registry
      #      - name: Login to digital ocean docker registry
      #        uses: digitalocean/action-doctl@v2
      #        with:
      #          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      #      - run: doctl registry login

      # Setup docker/buildx
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

        #      # Load versions from .env file
        #      - name: Load versions from .env file
        #        uses: falti/dotenv-action@v0.2.5
        #        id: dotenv
        #        with:
        #          log-variables: true

        # Copy @acrommunity/common to docker build context
      - name: Copy @acrommunity/common to docker build context
        run: mkdir -p ./api/@acrommunity && cp -r ./common ./api/@acrommunity

  #      # Build and push Docker Image
  #      - uses: docker/build-push-action@v2
  #        with:
  #          context: ./api
  #          push: true
  #          tags: registry.digitalocean.com/cat-europe/ltms/api:${{ steps.dotenv.outputs.version }}
  #          cache-from: type=local,src=/tmp/.buildx-cache
  #          cache-to: type=local,dest=/tmp/.buildx-cache-new
  #        # This ugly bit is necessary if you don't want your cache to grow forever
  #        # till it hits GitHub's limit of 5GB.
  #        # Temp fix
  #        # https://github.com/docker/build-push-action/issues/252
  #        # https://github.com/moby/buildkit/issues/1896

  #      - name: Move cache
  #        run: |
  #          rm -rf /tmp/.buildx-cache
  #          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  publish_web:
    if: "!contains(github.event.head_commit.message, '[skip-web]')"
    name: "Publish @acrommunity/web"
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      # Setup node
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install, check and build the app
      - run: yarn workspace @acrommunity/common install
      - run: yarn workspace @acrommunity/common build
      - run: yarn workspace @acrommunity/web link:common
      - run: yarn workspace @acrommunity/web install
      - run: yarn workspace @acrommunity/web lint
      - run: yarn workspace @acrommunity/web build

      #      # Login to Registry
      #      - uses: digitalocean/action-doctl@v2
      #        with:
      #          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      #      - run: doctl registry login

      # Setup Docker/Buildx
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

#      # Load versions from .env file
#      - name: Load versions from .env file
#        uses: falti/dotenv-action@v0.2.5
#        id: dotenv
#        with:
#          log-variables: true

#      # Build and push Docker Image
#      - uses: docker/build-push-action@v2
#        with:
#          context: ./web
#          push: true
#          tags: registry.digitalocean.com/cat-europe/ltms/web:${{ steps.dotenv.outputs.version }}
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache-new
#        # This ugly bit is necessary if you don't want your cache to grow forever
#        # till it hits GitHub's limit of 5GB.
#        # Temp fix
#        # https://github.com/docker/build-push-action/issues/252
#        # https://github.com/moby/buildkit/issues/1896

#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
