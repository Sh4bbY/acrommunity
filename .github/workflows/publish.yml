name: publisher

on:
  push:
    branches:
      - dev

jobs:
  publish_api:
    if: "!contains(github.event.head_commit.message, '[skip-api]')"
    name: "Publish @acrommunity/api"
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install, check and build the app
      - run: yarn workspace @acrommunity/common install
      - run: yarn workspace @acrommunity/common build
      - run: yarn workspace @acrommunity/api link:common
      - run: yarn workspace @acrommunity/api install
      - run: yarn workspace @acrommunity/api lint
      - run: yarn workspace @acrommunity/api build

      # Login to Registry
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/sh4bby/acrommunity/api

        # Copy @acrommunity/common to docker build context
      - name: Copy @acrommunity/common to docker build context
        run: mkdir -p ./api/@acrommunity && cp -r ./common ./api/@acrommunity

      # Build and push Docker Image
      - uses: docker/build-push-action@v3
        with:
          context: ./api
          push: true
          tags: ghcr.io/sh4bby/acrommunity/api:0.1.0
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}

  publish_web:
    if: "!contains(github.event.head_commit.message, '[skip-web]')"
    name: "Publish @acrommunity/web"
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      # Setup node
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install, check and build the app
      - run: yarn workspace @acrommunity/common install
      - run: yarn workspace @acrommunity/common build
      - run: yarn workspace @acrommunity/web link:common
      - run: yarn workspace @acrommunity/web install
      - run: yarn workspace @acrommunity/web lint
      - run: yarn workspace @acrommunity/web build

      # Login to Registry
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/sh4bby/acrommunity/web

      # Build and push Docker Image
      - uses: docker/build-push-action@v3
        with:
          context: ./web
          push: true
          tags: ghcr.io/sh4bby/acrommunity/web:0.1.0
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
